package{	import flash.display.Shape;	import flash.display.Sprite;	import flash.filters.*;	import flash.events.Event;	public class Tree extends Sprite	{		private var _size:uint;		private var _color:uint;				public function Tree(size:uint = 80, color:uint = 0x66FF66)		{			this._size = size;			this._color = color;						addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}		private function onAddedToStage(event:Event):void		{			drawTree();		}		private function onRemovedFromStage(event:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);		}		private function drawTree():void		{			//Create a Vector object for the drawing commands			var commands:Vector.<int> = new Vector.<int>(); 			//1 = moveTo(), 2 = ;lineTo()			commands.push(1,2,2,2,2,2,2,2);			//Create a new Vector object for the drawing coordinates			var coordinates:Vector.<Number> = new Vector.<Number>();			//Push the coordinates into the starCoordinates Vector			coordinates.push(25,0, 0,40, 20,40, 20,50, 30,50, 30,40, 50,40, 25,0);			//Create the treeShape object and draw it.			var treeShape:Shape = new Shape();			treeShape.graphics.lineStyle();			treeShape.graphics.beginFill(_color);			//Use the drawPath command to draw the shape using the starCommands and starCoordinates Vectors			treeShape.graphics.drawPath(commands, coordinates);			treeShape.graphics.endFill();			treeShape.width = _size;			treeShape.height = _size;			//Position the star in the center of the sprite			treeShape.x = treeShape.x - treeShape.width/2;			treeShape.y = treeShape.y - treeShape.height/2;			addChild(treeShape);						//Add a bevel filter			var filters:Array = new Array();			filters = treeShape.filters;			filters.push(new BevelFilter(2, 135, 0xFFFFFF, 0.50, 0x000000, 0.50, 2, 2));			treeShape.filters = filters;		}		public function get size():uint		{			return _size;		}	}}