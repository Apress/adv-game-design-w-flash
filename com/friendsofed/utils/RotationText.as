package com.friendsofed.utils{	import flash.text.*;	import flash.display.Sprite;	import flash.display.Shape;	public class RotationText extends Sprite	{		//Some more information on embedding fonts:				//1.		//An excellent article: 		//http://www.adobe.com/devnet/flash/articles/embed_metadata_04.html		//Be sure to read the comments.				//2.		//You can also embed fonts that are not installed on your system if you have font file.		//Suppy the font file's path in the source parameter		//[Embed(source="../../assets/fonts/Arial.ttf", fontName="embeddedFont", fontWeight="normal", advancedAntiAliasing="true", mimeType="application/x-font")]				//3.		//There are three different font managers:		//http://www.lynchconsulting.com.au/blog/index.cfm/2008/6/7/FlexAIR-embedded-fonts--Exception-during-Transcoding--Solved		//If you have trouble rendering an embedded font, try manually setting the font manager				//4.		//If you are using the Flash IDE, sometimes the path to the Flex SDK cannot be found using 		//"Test Project" in the project panel. Use "Test Movie" instead				//5.		//You can also embed fonts using an exteral SWF file: 		//http://yourpalmark.com/2009/04/05/embedding-fonts-using-external-swf-files/				//6.		//If you have many fonts to embed a runtime, consider creating a class that just embeds fonts.		//Colin Moock's Essential ActionScript 3.0 describes such a system on p.741				[Embed(systemFont="Andale Mono", fontName="embeddedFont", fontWeight="normal", advancedAntiAliasing="true", mimeType="application/x-font")]    private var EmbeddedFontClass:Class;				private var _format:TextFormat;		private var _textField:TextField;		private var _textContainer:Sprite;				public function RotationText(textContent:String = "", fontSize:uint = 12, color:uint = 0x000000)		{			//Optionally, register the embedded font with the global font list			//This allows the font to be used by any SWF files running in the Flash Player			//Font.registerFont(EmbeddedFontClass);						//1. Create a text format object			_format = new TextFormat();			_format.size = fontSize;			_format.color = color;						//The name of the font should match 			//the "name" parameter in the embed tag			_format.font = "embeddedFont";						//2. Create a TextField object			_textField = new TextField();			_textField.embedFonts = true;			_textField.autoSize = TextFieldAutoSize.LEFT;			_textField.text = textContent;			_textField.setTextFormat(_format);			_textField.antiAliasType = flash.text.AntiAliasType.ADVANCED;						//3. Create a sprite object and add the _textContainer to it			_textContainer = new Sprite();			addChild(_textContainer);			_textContainer.addChild(_textField);						//Position the container sprite so that the text's baseline is aligned with the vector			_textContainer.y = 0 - uint(_format.size);		}				//Getters and setters		//text		public function get text():String		{			return _textField.text;		}		public function set text(text:String):void		{			_textField.text = text;			_textField.setTextFormat(_format);		}				//fontSize		public function get fontSize():uint		{			return uint(_format.size);		}		public function set fontSize(fontSize:uint):void		{			_format.size = fontSize;			//the TextFormat needs to be reapplied for size change to take effect			_textField.setTextFormat(_format);						//Reposition the text's container sprite so that the baseline remains the same			_textContainer.y = 0 - uint(_format.size);		}				//color		public function get color():uint		{			return uint(_format.color);		}				public function set color(color:uint):void		{			_format.color = color;			_textField.setTextFormat(_format);		}	}}