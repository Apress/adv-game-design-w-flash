package com.friendsofed.vector{	import flash.display.Shape;	import flash.display.Sprite;	import flash.filters.*;	import flash.events.Event;	public class IntersectionMark extends Sprite	{		private var _size:uint;		private var _color:uint;				public function IntersectionMark(size:uint = 15, color:uint = 0xFF0000)		{			this._size = size;			this._color = color;						addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}		private function onAddedToStage(event:Event):void		{			drawMark();		}		private function onRemovedFromStage(event:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);		}		private function drawMark():void		{			//Create a Vector object for the drawing commands			var drawingCommands:Vector.<int> = new Vector.<int>(); 						//1 = moveTo(), 2 = ;lineTo()			drawingCommands.push(1,2,1,2);						//Create a new Vector object for the drawing coordinates			var drawingCoordinates:Vector.<Number> = new Vector.<Number>();						//Push the coordinates into the starCoordinates Vector			drawingCoordinates.push(0, 0, _size, _size, _size, 0, 0,_size);						//Create the mark object and draw it.			var mark:Shape = new Shape();			mark.graphics.lineStyle(1, _color);						//Use the drawPath command to draw the shape 			mark.graphics.drawPath(drawingCommands, drawingCoordinates);						//Position the star in the center of the sprite			mark.x = mark.x - mark.width / 2;			mark.y = mark.y - mark.height / 2;						//Add a bevel and drop shadow filter			var markFilters:Array = [];			markFilters = this.filters;			markFilters.push(new BevelFilter(2, 135, 0xFFFFFF, 0.50, 0x000000, 0.50, 2, 2));			markFilters.push(new DropShadowFilter(2, 135, 0x000000, 0.35, 2, 2));			this.filters = markFilters;						addChild(mark);				}		public function get size():uint		{			return _size;		}	}}