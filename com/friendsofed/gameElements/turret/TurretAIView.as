package com.friendsofed.gameElements.turret{  import flash.display.Sprite;  	//Keyboard Events	import flash.events.Event;	import com.friendsofed.gameElements.primitives.*;	import com.friendsofed.vector.*;	public class TurretAIView extends Sprite	{		private var _turretModel:Object;		private var _controller:Object;		private var _gameModel:Object;		private var _stage:Object;		public function TurretAIView		  (		    model:AVerletModel, 		    gameModel:Object, 		    controller:TurretAIController, 		    stage:Object		  ):void		{			this._turretModel = model;		  this._controller = controller;		  this._gameModel = gameModel;		  this._stage = stage;					_turretModel.enemy.addEventListener			  (Event.CHANGE, changeHandler);		}		private function changeHandler(event:Event):void  	{  	  var enemy:Object = _turretModel.enemy;  	    	  //Optionally use a VectorModel to create the vector  	  /*  		var distance:VectorModel   		  = new VectorModel  		  (  		    enemy.xPos,   		    enemy.yPos,   		    _turretModel.xPos,   		    _turretModel.yPos  		  );  		*/  		//Create the vector  		var vx:Number = enemy.xPos - _turretModel.xPos;      var vy:Number = enemy.yPos - _turretModel.yPos;            //Calculate the distance (the vector's magnitude)      var distance:int = Math.sqrt(vx * vx + vy * vy);            if(distance < _turretModel.attackRange      && enemy.visible)      {        var angle:Number           = Math.atan2          (            _turretModel.yPos - enemy.yPos - enemy.height * 0.5,             _turretModel.xPos - enemy.xPos - enemy.width * 0.5          );  	    _turretModel.angle = angle;  	    _controller.attack();  	  }  	}	}}