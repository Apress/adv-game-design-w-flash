package com.friendsofed.gameElements.car{	import flash.events.Event;	import flash.events.EventDispatcher;	import com.friendsofed.gameElements.primitives.*;	public class CarTileModel extends TileModel	{ 	  public var accelerate:Boolean = false;	  public var speed:Number = 0;	  		public function CarTileModel		  (		    maxTileSize:uint = 64,		    tileSheetColumn:uint = 0,		    tileSheetRow:uint = 0,		    mapRow:uint = 0, 		    mapColumn:uint = 0, 		    width:uint = 0, 		    height:uint = 0,		    setX:Number = 0		  ):void 		{		  //Send all the constructor to the TileModel		  //super class		  super		    (		      maxTileSize,  		    tileSheetColumn,  		    tileSheetRow,  		    mapRow,   		    mapColumn,   		    width,   		    height,  		    setX		    );		}		override public function update():void	  {	    //Temporarily store the current x and y positions			temporaryX = xPos;			temporaryY = yPos;						//Calculate the rotationValue			rotationValue += rotationSpeed;			//Calculate the angle and acceleration			angle = rotationValue * (Math.PI / 180);						//Increase the car's speed if the controller			//tells it to accelerate			if(accelerate)			{			  speed += 0.1;			  			  //Add some optional drag			  speed *= friction;			}			//Add friction to the speed if the car is			//not accelerating			else			{			  speed *= friction;			}						//Calculate the acceleration based on the angle of rotation			acceleration_X = speed * Math.cos(angle);	    acceleration_Y = speed * Math.sin(angle);	  			//Update the position			xPos += acceleration_X;			yPos += acceleration_Y;						//The temporary value becomes the      //previous positions, which are used calculate velocity			previousX = temporaryX;			previousY = temporaryY;	  }	}}