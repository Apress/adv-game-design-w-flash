package{	import flash.events.Event;  import flash.display.*;  import flash.media.Sound;  import flash.media.SoundChannel;  import flash.media.SoundTransform;  import flash.events.MouseEvent;	import flash.ui.Mouse;  import com.friendsofed.utils.*;    [SWF(width="550", height="400",   backgroundColor="#FFFFFF", frameRate="60")]  	public class SoundAndMusic extends Sprite	{		//Music    [Embed(source="../assets/sounds/music.mp3")]    private var Music:Class;    //Create the _music sound from the Music class    private var _music:Sound = new Music();    private var _musicChannel:SoundChannel = new SoundChannel();    private var _playHeadPosition:int = _musicChannel.position;    private var _musicIsPlaying:Boolean = false;    private var _volume:Number = 1;    private var _pan:Number = 0;        //Laser gun    [Embed(source="../assets/sounds/laserGun.mp3")]    private var LaserGun:Class;    private var _laserGun:Sound = new LaserGun();    private var _laserGunChannel:SoundChannel =       new SoundChannel();        //Big Explosion    [Embed(source="../assets/sounds/bigExplosion.mp3")]    private var BigExplosion:Class;    private var _bigExplosion:Sound = new BigExplosion();    private var _bigExplosionChannel:SoundChannel =       new SoundChannel();          //Status box  	private var _statusBox:StatusBox = new StatusBox;      		public function SoundAndMusic():void		{ 		  //LASER		  var laserButton:EasyButton 		    = new EasyButton("Laser gun", 12, 100, 25);		  addChild(laserButton);		  		  //Position the button on the stage		  laserButton.x = 200;			laserButton.y = 100;						//Add the button event listener  			laserButton.addEventListener			  (MouseEvent.CLICK, laserHandler);		  		  //EXPLOSION		  var explosionButton:EasyButton 		    = new EasyButton("Explosion", 12, 100, 25);		  addChild(explosionButton);		  		  //Position the button on the stage		  explosionButton.x = 200;			explosionButton.y = laserButton.y + 25;						//Add the button event listener  			explosionButton.addEventListener			  (MouseEvent.CLICK, explosionHandler);			  			//PLAY		  var musicPlayButton:EasyButton 		    = new EasyButton("Music play", 12, 100, 25);		  addChild(musicPlayButton);		  		  //Position the button on the stage		  musicPlayButton.x = 200;			musicPlayButton.y = explosionButton.y + 25;						//Add the button event listener  			musicPlayButton.addEventListener			  (MouseEvent.CLICK, musicPlayHandler);			  			//STOP		  var musicStopButton:EasyButton 		    = new EasyButton("Music stop", 12, 100, 25);		  addChild(musicStopButton);		  		  //Position the button on the stage		  musicStopButton.x = 200;			musicStopButton.y = musicPlayButton.y + 25;						//Add the button event listener  			musicStopButton.addEventListener			  (MouseEvent.CLICK, musicStopHandler);  			  			//RESTART		  var restartButton:EasyButton 		    = new EasyButton("Restart", 12, 100, 25);		  addChild(restartButton);		  		  //Position the button on the stage		  restartButton.x = 200;			restartButton.y = musicStopButton.y + 25;						//Add the button event listener  			restartButton.addEventListener			  (MouseEvent.CLICK, restartHandler);						//REWIND		  var rewindButton:EasyButton 		    = new EasyButton("Rewind", 12, 100, 25);		  addChild(rewindButton);		  		  //Position the button on the stage		  rewindButton.x = 200;			rewindButton.y = restartButton.y + 25;						//Add the button event listener  			rewindButton.addEventListener			  (MouseEvent.CLICK, rewindHandler);						//FAST FORWARD		  var fastForwardButton:EasyButton 		    = new EasyButton("Fast Forward", 12, 100, 25);		  addChild(fastForwardButton);		  		  //Position the button on the stage		  fastForwardButton.x = 200;			fastForwardButton.y = rewindButton.y + 25;						//Add the button event listener  			fastForwardButton.addEventListener			  (MouseEvent.CLICK, fastForwardHandler);      						//VOLUME UP		  var volumeUpButton:EasyButton 		    = new EasyButton("Volume Up", 12, 100, 25);		  addChild(volumeUpButton);		  		  //Position the button on the stage		  volumeUpButton.x = 200;			volumeUpButton.y = fastForwardButton.y + 25;						//Add the button event listener  			volumeUpButton.addEventListener			  (MouseEvent.CLICK, volumeUpHandler);      						//VOLUME DOWN		  var volumeDownButton:EasyButton 		    = new EasyButton("Volume Down", 12, 100, 25);		  addChild(volumeDownButton);		  		  //Position the button on the stage		  volumeDownButton.x = 200;			volumeDownButton.y = volumeUpButton.y + 25;						//Add the button event listener  			volumeDownButton.addEventListener			  (MouseEvent.CLICK, volumeDownHandler);  			       			//PAN LEFT		  var panLeftButton:EasyButton 		    = new EasyButton("Pan Left", 12, 100, 25);		  addChild(panLeftButton);		  		  //Position the button on the stage		  panLeftButton.x = 200;			panLeftButton.y = volumeDownButton.y + 25;						//Add the button event listener  			panLeftButton.addEventListener			  (MouseEvent.CLICK, panLeftHandler);    			  			//PAN RIGHT		  var panRightButton:EasyButton 		    = new EasyButton("Pan Right", 12, 100, 25);		  addChild(panRightButton);		  		  //Position the button on the stage		  panRightButton.x = 200;			panRightButton.y = panLeftButton.y + 25;						//Add the button event listener  			panRightButton.addEventListener			  (MouseEvent.CLICK, panRightHandler);    			    			//Add the status box			addChild(_statusBox);    		addEventListener(Event.ENTER_FRAME, enterFrameHandler);		}				private function enterFrameHandler(event:Event):void		{		  //Update status box			_statusBox.text = "MUSIC:"; 			_statusBox.text += 			  "\n" + "POSITION: " + uint(_musicChannel.position);			_statusBox.text += "\n" + "VOLUME: " + _volume; 			_statusBox.text += "\n" + "PAN: " + _pan;  	  }		private function explosionHandler(event:Event):void		{		  //Play the button sound		  _bigExplosionChannel = _bigExplosion.play();	  }	  private function laserHandler(event:Event):void		{		  //Play the button sound		  _laserGunChannel = _laserGun.play();	  }	  private function musicPlayHandler(event:Event):void		{		    //Play the button sound		    if (!_musicIsPlaying)	      {		      _musicChannel = _music.play(_playHeadPosition);		      _musicIsPlaying = true;	      }	  }	  private function musicStopHandler(event:Event):void		{		    _playHeadPosition = _musicChannel.position;		    _musicChannel.stop();		    _musicIsPlaying = false;	  }	  private function restartHandler(event:Event):void		{		  //Play the button sound		  _playHeadPosition = 0;		  if (_musicIsPlaying)	    {	      _musicChannel.stop();	      _musicChannel = _music.play(_playHeadPosition);      }	  }	  private function rewindHandler(event:Event):void		{		   _playHeadPosition = _musicChannel.position - 500; 		  if (_musicIsPlaying)	    {	      _musicChannel.stop();	      _musicChannel = _music.play(_playHeadPosition);      }	  }	  private function fastForwardHandler(event:Event):void		{		   _playHeadPosition = _musicChannel.position + 500; 		  if (_musicIsPlaying)	    {	      _musicChannel.stop();	      _musicChannel = _music.play(_playHeadPosition);      }	  }	  private function volumeUpHandler(event:Event):void		{		   _volume += 0.2;		   var transform:SoundTransform = new SoundTransform		     (		      _volume, _pan		     );		  _musicChannel.soundTransform = transform;	  }	  private function volumeDownHandler(event:Event):void		{		   _volume -= 0.2;		   if(_volume < 0)		   {		     _volume = 0;		   }		   var transform:SoundTransform = new SoundTransform		     (		      _volume, _pan		     );		  _musicChannel.soundTransform = transform;	  }	  private function panLeftHandler(event:Event):void		{		   _pan -= 0.2;		   if(_pan < -1)		   {		     _pan = -1;		   }		   var transform:SoundTransform = new SoundTransform		     (		      _volume, _pan		     );		  _musicChannel.soundTransform = transform;	  }	  private function panRightHandler(event:Event):void		{		   _pan += 0.2;		   if(_pan > 1)		   {		     _pan = 1;		   }		   var transform:SoundTransform = new SoundTransform		     (		      _volume, _pan		     );		  _musicChannel.soundTransform = transform;	  }	}}