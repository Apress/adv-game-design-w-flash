package{	import flash.events.Event;  import flash.display.*;  import flash.events.MouseEvent;	import flash.ui.Mouse;  import com.friendsofed.utils.*;    //Sound classes  import flash.media.Sound;  import flash.media.SoundChannel;  import flash.media.SoundTransform;    [SWF(width="130", height="350",   backgroundColor="#FFFFFF", frameRate="60")]  	public class MusicPlayer extends Sprite	{		//Music    [Embed(source="../assets/sounds/music.mp3")]    private var Music:Class;    //Create the _music sound from the Music class    private var _music:Sound = new Music();    private var _musicChannel:SoundChannel = new SoundChannel();    private var _playHeadPosition:int = _musicChannel.position;    private var _musicIsPlaying:Boolean = false;    private var _volume:Number = 1;    private var _pan:Number = 0;          //Status box  	private var _statusBox:StatusBox = new StatusBox;      		public function MusicPlayer():void		{   			//PLAY		  var musicPlayButton:EasyButton 		    = new EasyButton("Music play", 12, 100, 25);		  addChild(musicPlayButton);		  		  //Position the button on the stage		  musicPlayButton.x = 20;			musicPlayButton.y = 70;						//Add the button event listener  			musicPlayButton.addEventListener			  (MouseEvent.CLICK, playHandler);			  			//STOP		  var musicPauseButton:EasyButton 		    = new EasyButton("Music pause", 12, 100, 25);		  addChild(musicPauseButton);		  		  //Position the button on the stage		  musicPauseButton.x = 20;			musicPauseButton.y = musicPlayButton.y + 30;						//Add the button event listener  			musicPauseButton.addEventListener			  (MouseEvent.CLICK, pauseHandler);  			  			//RESTART		  var restartButton:EasyButton 		    = new EasyButton("Restart", 12, 100, 25);		  addChild(restartButton);		  		  //Position the button on the stage		  restartButton.x = 20;			restartButton.y = musicPauseButton.y + 30;						//Add the button event listener  			restartButton.addEventListener			  (MouseEvent.CLICK, restartHandler);						//REWIND		  var rewindButton:EasyButton 		    = new EasyButton("Rewind", 12, 100, 25);		  addChild(rewindButton);		  		  //Position the button on the stage		  rewindButton.x = 20;			rewindButton.y = restartButton.y + 30;						//Add the button event listener  			rewindButton.addEventListener			  (MouseEvent.CLICK, rewindHandler);						//FAST FORWARD		  var fastForwardButton:EasyButton 		    = new EasyButton("Fast Forward", 12, 100, 25);		  addChild(fastForwardButton);		  		  //Position the button on the stage		  fastForwardButton.x = 20;			fastForwardButton.y = rewindButton.y + 30;						//Add the button event listener  			fastForwardButton.addEventListener			  (MouseEvent.CLICK, fastForwardHandler);      						//VOLUME UP		  var volumeUpButton:EasyButton 		    = new EasyButton("Volume Up", 12, 100, 25);		  addChild(volumeUpButton);		  		  //Position the button on the stage		  volumeUpButton.x = 20;			volumeUpButton.y = fastForwardButton.y + 30;						//Add the button event listener  			volumeUpButton.addEventListener			  (MouseEvent.CLICK, volumeUpHandler);      						//VOLUME DOWN		  var volumeDownButton:EasyButton 		    = new EasyButton("Volume Down", 12, 100, 25);		  addChild(volumeDownButton);		  		  //Position the button on the stage		  volumeDownButton.x = 20;			volumeDownButton.y = volumeUpButton.y + 30;						//Add the button event listener  			volumeDownButton.addEventListener			  (MouseEvent.CLICK, volumeDownHandler);  			       			//PAN LEFT		  var panLeftButton:EasyButton 		    = new EasyButton("Pan Left", 12, 100, 25);		  addChild(panLeftButton);		  		  //Position the button on the stage		  panLeftButton.x = 20;			panLeftButton.y = volumeDownButton.y + 30;						//Add the button event listener  			panLeftButton.addEventListener			  (MouseEvent.CLICK, panLeftHandler);    			  			//PAN RIGHT		  var panRightButton:EasyButton 		    = new EasyButton("Pan Right", 12, 100, 25);		  addChild(panRightButton);		  		  //Position the button on the stage		  panRightButton.x = 20;			panRightButton.y = panLeftButton.y + 30;						//Add the button event listener  			panRightButton.addEventListener			  (MouseEvent.CLICK, panRightHandler);    			    			//Add the status box			addChild(_statusBox);    			_statusBox.x = 20;			_statusBox.y = 10			  addEventListener(Event.ENTER_FRAME, enterFrameHandler);		}				private function enterFrameHandler(event:Event):void		{		  //Update status box			_statusBox.text = "MUSIC:"; 			if(_musicChannel != null)	    {			    _statusBox.text 			      += "\n" + "POSITION: " + uint(_musicChannel.position);		  }			_statusBox.text += "\n" + "VOLUME: " + _volume; 			_statusBox.text += "\n" + "PAN: " + _pan;  	  }			  private function playHandler(event:Event):void		{		  if (!_musicIsPlaying		  && _musicChannel != null)	    {		    _musicChannel = _music.play(_playHeadPosition);		    _musicIsPlaying = true;	    }	  }	  	  private function pauseHandler(event:Event):void		{		  if(_musicChannel != null)		  {		    _playHeadPosition = _musicChannel.position;		    _musicChannel.stop();		    _musicIsPlaying = false;	    }	  }	  	  private function restartHandler(event:Event):void		{		  if(_musicIsPlaying		  && _musicChannel != null)		  {		    _playHeadPosition = 0;	      _musicChannel.stop();	      _musicChannel = _music.play(_playHeadPosition);      }	  }	  	  private function rewindHandler(event:Event):void		{		  if(_musicChannel != null		  && _musicIsPlaying		  && _musicChannel.position - 1000 > 0)	    {		    _playHeadPosition = _musicChannel.position - 1000; 	      _musicChannel.stop();	      _musicChannel = _music.play(_playHeadPosition);      }	  }	  	  private function fastForwardHandler(event:Event):void		{		  if(_musicChannel != null		  && _musicIsPlaying		  && _musicChannel.position + 1000 < _music.length)	    {		    _playHeadPosition = _musicChannel.position + 1000; 	      _musicChannel.stop();	      _musicChannel = _music.play(_playHeadPosition);      }	  }	  	  private function volumeUpHandler(event:Event):void		{		  if(_musicChannel != null)		  {		     _volume += 0.2;		     var transform:SoundTransform 		       = new SoundTransform(_volume, _pan);		    _musicChannel.soundTransform = transform;	    }	  }	  	  private function volumeDownHandler(event:Event):void		{		  if(_musicChannel != null		  && _volume > 0)		  {		     _volume -= 0.2;		     if(_volume < 0)		     {		       _volume = 0;		     }		     var transform:SoundTransform 		       = new SoundTransform(_volume, _pan);		    _musicChannel.soundTransform = transform;	    }    }	  	  private function panLeftHandler(event:Event):void		{		  if(_musicChannel != null		  && _pan > -1)		  {		     _pan -= 0.2;		     if(_pan < -1)		     {		       _pan = -1;		     }		     var transform:SoundTransform 		       = new SoundTransform(_volume, _pan);		    _musicChannel.soundTransform = transform;	    }	  }	  	  private function panRightHandler(event:Event):void		{		  if(_musicChannel != null		  && _pan < 1)		  {		     _pan += 0.2;		     if(_pan > 1)		     {		       _pan = 1;		     }		     var transform:SoundTransform 		       = new SoundTransform(_volume, _pan);		    _musicChannel.soundTransform = transform;	    }    }        //Optional music loop handler.		//To use it, add this line after each Sound.play() method:		/*		_musicChannel.addEventListener	    (Event.SOUND_COMPLETE, loopMusicHandler);	  */	  //Remember to also remove it after each Sound.stop() method:	  /*		_musicChannel.removeEventListener      (Event.SOUND_COMPLETE, loopMusicHandler);	  */	  		/*		public function loopMusicHandler(event:Event):void    {      if (_musicChannel != null)      {        //Play the music  	      _musicChannel = _music.play(0);	      	      //Add a new listener	      _musicChannel.addEventListener	        (Event.SOUND_COMPLETE, loopMusicHandler);      }     }    */	}}